22d21
< import java.util.ArrayList;
34a34
> import org.apache.hadoop.hive.serde2.SerDeStats;
70a71,75
>   private long serializedSize;
>   private SerDeStats stats;
>   private boolean lastOperationSerialize;
>   private boolean lastOperationDeserialize;
> 
80c85
<         .getAllStructFieldTypeInfos() + "]";
---
>             .getAllStructFieldTypeInfos() + "]";
194a200,205
> 
>     serializedSize = 0;
>     stats = new SerDeStats();
>     lastOperationSerialize = false;
>     lastOperationDeserialize = false;
> 
223,255c234
<     // Read the configuration parameters
<     String columnNameProperty = tbl.getProperty(Constants.LIST_COLUMNS);
<     // NOTE: if "columns.types" is missing, all columns will be of String type
<     String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
< 
<     // Parse the configuration parameters
< 
<     if (columnNameProperty != null && columnNameProperty.length() > 0) {
<       serdeParams.columnNames = Arrays.asList(columnNameProperty.split(","));
<     } else {
<       serdeParams.columnNames = new ArrayList<String>();
<     }
<     if (columnTypeProperty == null) {
<       // Default type: all string
<       StringBuilder sb = new StringBuilder();
<       for (int i = 0; i < serdeParams.columnNames.size(); i++) {
<         if (i > 0) {
<           sb.append(":");
<         }
<         sb.append(Constants.STRING_TYPE_NAME);
<       }
<       columnTypeProperty = sb.toString();
<     }
< 
<     serdeParams.columnTypes = TypeInfoUtils
<         .getTypeInfosFromTypeString(columnTypeProperty);
< 
<     if (serdeParams.columnNames.size() != serdeParams.columnTypes.size()) {
<       throw new SerDeException(serdeName + ": columns has "
<           + serdeParams.columnNames.size()
<           + " elements while columns.types has "
<           + serdeParams.columnTypes.size() + " elements!");
<     }
---
>     LazyUtils.extractColumnInfo(tbl, serdeParams, serdeName);
302,303c281,282
<       byteArrayRef.setData(b.get());
<       cachedLazyStruct.init(byteArrayRef, 0, b.getSize());
---
>       byteArrayRef.setData(b.getBytes());
>       cachedLazyStruct.init(byteArrayRef, 0, b.getLength());
311a291,292
>     lastOperationSerialize = false;
>     lastOperationDeserialize = true;
363a345
>     serializedSize = 0;
389a372,374
>     serializedSize = serializeStream.getCount();
>     lastOperationSerialize = true;
>     lastOperationDeserialize = false;
528a514,530
> 
>   /**
>    * Returns the statistics after (de)serialization)
>    */
> 
>   public SerDeStats getSerDeStats() {
>     // must be different
>     assert (lastOperationSerialize != lastOperationDeserialize);
> 
>     if (lastOperationSerialize) {
>       stats.setRawDataSize(serializedSize);
>     } else {
>       stats.setRawDataSize(cachedLazyStruct.getRawDataSerializedSize());
>     }
>     return stats;
> 
>   }
